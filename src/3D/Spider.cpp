#include "Spider.hpp"

#include <btBulletDynamicsCommon.h>

#include "../Camera/Camera.hpp"
#include "../GLSL/Program.hpp"
#include "../Graphical/Framebuffer.hpp"
#include "../Resource/Mesh.hpp"
#include "../Resource/PhysicsMesh.hpp"
#include "../Resource/ResourceManager.hpp"
#include "../Utils/Asset.hpp"
#include "MeshPart.hpp"

using mmm::vec3;

Spider::Part::Part() : collisionGroup(1), collisionMask(-1), part(nullptr) {}

Spider::Part::Part(unsigned short group, unsigned short mask)
    : collisionGroup(group), collisionMask(mask), part(nullptr) {}

Spider::Spider() : Logging::Log("Spider") {
  ResourceManager* r = mAsset->rManager();
  mMesh              = r->get<PhysicsMesh>("PhysicsMesh::Spider");
  mElements          = mMesh->createCopyAll();
  mParts             = SPIDER_PARTS;

  for (auto& mesh : mElements->meshes) {
    Drawable3D* child = new MeshPart(mesh.second,
                                     mElements->bodies[mesh.first],
                                     mElements->motions[mesh.first]);

    child->setCollisionGroup(mParts[mesh.first].collisionGroup);
    child->setCollisionMask(mParts[mesh.first].collisionMask);

    for (auto& c : mElements->constraints[mesh.first]) {
      child->addConstraint(c);
    }

    mParts[mesh.first].part = child;
    mChildren.push_back(child);
    child->updateFromPhysics();
  }


  if (!SPIDER_POSITIONS.size()) {
    for (auto& mesh : mElements->meshes) {
      SPIDER_POSITIONS[mesh.first] =
        mParts[mesh.first].part->rigidBody()->getWorldTransform();
    }
  }

  mLog->debug("Spider loaded with weight of: {}", weight());

  reset();
}

Spider::~Spider() {
  for (auto& c : mChildren)
    delete c;

  mMesh->deleteCopy(mElements);
}

/**
 * @brief
 *   Resets the spiders position to the start state
 */
void Spider::reset() {
  btVector3 zero(0, 0, 0);
  for (auto& part : mParts) {
    btRigidBody* r = part.second.part->rigidBody();
    r->clearForces();
    r->setAngularVelocity(zero);
    r->setLinearVelocity(zero);
    r->setWorldTransform(SPIDER_POSITIONS[part.first]);
    r->activate(true);
  }
}

/**
 * @brief
 *   Looks up into the children and checks for a child with the specific name.
 *   If one is found, a pointer to that one is returned.
 *
 *   If no child is found, a nullptr is returned
 *
 * @param name
 *
 * @return
 */
Drawable3D* Spider::child(const std::string& name) {
  if (mParts.count(name) == 0)
    return nullptr;
  return mParts[name].part;
}

void Spider::update(float) {}

/**
 * @brief
 *   Draws the spider by drawing each of the children
 *
 * @param program
 * @param bindTexture
 */
void Spider::draw(std::shared_ptr<Program>& program, bool bindTexture) {
  program->bind();

  mMesh->mesh()->bindVertexArray();
  for (auto& child : mChildren)
    child->draw(program, bindTexture);
  mMesh->mesh()->unbindVertexArray();
}

void Spider::input(const Input::Event&) {}

/**
 * @brief
 *   Tries to upcast a Drawable3D object to a spider, returning a
 *   casted pointer if it works, otherwise nullptr
 *
 * @param drawable
 *
 * @return
 */
Spider* Spider::upcast(Drawable3D* drawable) {
  if (drawable == nullptr)
    return nullptr;

  return dynamic_cast<Spider*>(drawable);
}

std::map<std::string, btTransform>  Spider::SPIDER_POSITIONS = {};
std::map<std::string, Spider::Part> Spider::SPIDER_PARTS =
  { { "Eye", {
      0b1000000000000000,
      0b1011111111111111,
      vec3(-0.100000, -0.850000, 0.446689),
      vec3(0.100000, -0.850000, 0.446689),
      vec3(0.000000, -0.850000, 0.546689),
      vec3(0.000000, -0.850000, 0.242041),
      vec3(0.000000, -0.850000, 0.446689) } },
    { "Neck", {
      0b0100000000000000,
      0b0011111111111111,
      vec3(-0.100000, -0.709850, 0.109850),
      vec3(0.100000, -0.709850, 0.109850),
      vec3(-0.000000, -0.639139, 0.180561),
      vec3(0.000000, -0.599997, -0.000003),
      vec3(-0.000000, -0.709850, 0.109850) } },
    { "Sternum", {
      0b0100000000000000,
      0b1011111111111111,
      vec3(0),
      vec3(0),
      vec3(0),
      vec3(0),
      vec3(0) } },
    { "Hip", {
      0b0100000000000000,
      0b0011111111111111,
      vec3(-0.100000, 0.722260, 0.032758),
      vec3(0.100000, 0.722260, 0.032758),
      vec3(0.000000, 0.696378, 0.129351),
      vec3(0.000000, 0.600004, 0.000000),
      vec3(0.000000, 0.722260, 0.032758) } },
    { "Abdomin", {
      0b1000000000000000,
      0b1011111111111111,
      vec3(-0.100000, 1.565926, 0.258819),
      vec3(0.100000, 1.565926, 0.258819),
      vec3(0.000000, 1.540044, 0.355412),
      vec3(0.000000, 0.898278, 0.079924),
      vec3(0.000000, 1.565926, 0.258819) } },
    { "TrochanterL1", {
      0b0010100000000000,
      0b1001011111111111,
      vec3(0.453923, -0.746603, -0.000000),
      vec3(0.553923, -0.573397, -0.000000),
      vec3(0.503923, -0.660000, 0.100000),
      vec3(0.400000, -0.600000, -0.000000),
      vec3(0.503923, -0.660000, -0.000000) } },
    { "FemurL1", {
      0b0010100000000000,
      0b1001011111111111,
      vec3(0.958661, -1.038013, 0.324071),
      vec3(1.058661, -0.864808, 0.324071),
      vec3(0.958988, -0.922732, 0.405986),
      vec3(0.607846, -0.720000, -0.000000),
      vec3(1.008661, -0.951411, 0.324071) } },
    { "PatellaL1", {
      0b0010100000000000,
      0b1101011111111111,
      vec3(1.700623, -1.466385, 0.578682),
      vec3(1.800623, -1.293180, 0.578682),
      vec3(1.765661, -1.388465, 0.677163),
      vec3(1.409475, -1.182821, 0.648141),
      vec3(1.750623, -1.379782, 0.578682) } },
    { "TibiaL1", {
      0b0010100000000000,
      0b1101011111111111,
      vec3(2.337326, -1.833986, 0.021827),
      vec3(2.437326, -1.660781, 0.021827),
      vec3(2.458266, -1.788341, 0.079185),
      vec3(2.091770, -1.576744, 0.509223),
      vec3(2.387326, -1.747383, 0.021827) } },
    { "TarsusL1", {
      0b0010100000000000,
      0b1101011111111111,
      vec3(2.715063, -2.052072, -0.720684),
      vec3(2.815063, -1.878867, -0.720684),
      vec3(2.848714, -2.013766, -0.694802),
      vec3(2.707002, -1.931948, -0.470476),
      vec3(2.765063, -1.965469, -0.720684) } },
    { "TrochanterL2", {
      0b0010010000000000,
      0b1001101111111111,
      vec3(0.500812, -0.319319, 0.000000),
      vec3(0.535542, -0.122357, 0.000000),
      vec3(0.518177, -0.220838, 0.100000),
      vec3(0.400000, -0.200000, 0.000000),
      vec3(0.518177, -0.220838, 0.000000) } },
    { "FemurL2", {
      0b0010010000000000,
      0b1001101111111111,
      vec3(1.074779, -0.420524, 0.324071),
      vec3(1.109508, -0.223563, 0.324071),
      vec3(1.035657, -0.312084, 0.405986),
      vec3(0.636354, -0.241676, 0.000000),
      vec3(1.092143, -0.322044, 0.324071) } },
    { "PatellaL2", {
      0b0010010000000000,
      0b1101101111111111,
      vec3(1.918507, -0.569296, 0.578682),
      vec3(1.953236, -0.372335, 0.578682),
      vec3(1.952973, -0.473831, 0.677163),
      vec3(1.547933, -0.402412, 0.648141),
      vec3(1.935871, -0.470816, 0.578682) } },
    { "TibiaL2", {
      0b0010010000000000,
      0b1101101111111111,
      vec3(2.642539, -0.696963, 0.021827),
      vec3(2.677268, -0.500001, 0.021827),
      vec3(2.740574, -0.612706, 0.079185),
      vec3(2.323810, -0.539220, 0.509223),
      vec3(2.659903, -0.598482, 0.021827) } },
    { "TarsusL2", {
      0b0010010000000000,
      0b1101101111111111,
      vec3(3.072088, -0.772704, -0.720687),
      vec3(3.106817, -0.575742, -0.720687),
      vec3(3.184577, -0.690996, -0.694806),
      vec3(3.023428, -0.662581, -0.470480),
      vec3(3.089452, -0.674223, -0.720687) } },
    { "TrochanterL3", {
      0b0010001000000000,
      0b1001110111111111,
      vec3(0.541793, 0.134466, 0.000000),
      vec3(0.490029, 0.327651, 0.000000),
      vec3(0.515911, 0.231058, 0.100000),
      vec3(0.400000, 0.200000, 0.000000),
      vec3(0.515911, 0.231058, 0.000000) } },
    { "FemurL3", {
      0b0010001000000000,
      0b1001110111111111,
      vec3(1.104755, 0.285311, 0.324071),
      vec3(1.052991, 0.478496, 0.324071),
      vec3(1.023470, 0.367058, 0.405986),
      vec3(0.631822, 0.262117, 0.000000),
      vec3(1.078873, 0.381903, 0.324071) } },
    { "PatellaL3", {
      0b0010001000000000,
      0b1101110111111111,
      vec3(1.932306, 0.507052, 0.578682),
      vec3(1.880542, 0.700238, 0.578682),
      vec3(1.923197, 0.608139, 0.677163),
      vec3(1.525923, 0.501690, 0.648141),
      vec3(1.906424, 0.603645, 0.578682) } },
    { "TibiaL3", {
      0b0010001000000000,
      0b1101110111111111,
      vec3(2.642456, 0.697337, 0.021827),
      vec3(2.590692, 0.890522, 0.021827),
      vec3(2.695698, 0.815130, 0.079185),
      vec3(2.286924, 0.705600, 0.509223),
      vec3(2.616574, 0.793929, 0.021827) } },
    { "TarsusL3", {
      0b0010001000000000,
      0b1101110111111111,
      vec3(3.063769, 0.810227, -0.720687),
      vec3(3.012005, 1.003412, -0.720687),
      vec3(3.131188, 0.931820, -0.694806),
      vec3(2.973128, 0.889468, -0.470480),
      vec3(3.037887, 0.906820, -0.720687) } },
    { "TrochanterL4", {
      0b0010000100000000,
      0b1001111011111111,
      vec3(0.556204, 0.600530, -0.000000),
      vec3(0.427647, 0.753739, -0.000000),
      vec3(0.491925, 0.677134, 0.100000),
      vec3(0.400000, 0.600000, -0.000000),
      vec3(0.491925, 0.677134, -0.000000) } },
    { "FemurL4", {
      0b0010000100000000,
      0b1001111011111111,
      vec3(1.002671, 0.975160, 0.324071),
      vec3(0.874113, 1.128369, 0.324071),
      vec3(0.894454, 1.014896, 0.405986),
      vec3(0.583851, 0.754269, 0.000000),
      vec3(0.938392, 1.051764, 0.324071) } },
    { "PatellaL4", {
      0b0010000100000000,
      0b1101111011111111,
      vec3(1.658975, 1.525864, 0.578682),
      vec3(1.530417, 1.679073, 0.578682),
      vec3(1.607998, 1.613631, 0.677163),
      vec3(1.292933, 1.349260, 0.648141),
      vec3(1.594696, 1.602469, 0.578682) } },
    { "TibiaL4", {
      0b0010000100000000,
      0b1101111011111111,
      vec3(2.222172, 1.998443, 0.021827),
      vec3(2.093614, 2.151651, 0.021827),
      vec3(2.220643, 2.127701, 0.079185),
      vec3(1.896459, 1.855678, 0.509223),
      vec3(2.157893, 2.075047, 0.021827) } },
    { "TarsusL4", {
      0b0010000100000000,
      0b1101111011111111,
      vec3(2.556302, 2.278811, -0.720687),
      vec3(2.427744, 2.432019, -0.720687),
      vec3(2.566017, 2.417504, -0.694806),
      vec3(2.440665, 2.312321, -0.470480),
      vec3(2.492023, 2.355415, -0.720687) } },
    { "TrochanterR1", {
      0b0001100000000000,
      0b1010011111111111,
      vec3(-0.553923, -0.573398, 0.000000),
      vec3(-0.453923, -0.746603, 0.000000),
      vec3(-0.503923, -0.660000, 0.100000),
      vec3(-0.400000, -0.600000, 0.000000),
      vec3(-0.503923, -0.660000, 0.000000) } },
    { "FemurR1", {
      0b0001100000000000,
      0b1010011111111111,
      vec3(-1.058661, -0.864808, 0.324071),
      vec3(-0.958661, -1.038013, 0.324071),
      vec3(-0.958988, -0.922732, 0.405986),
      vec3(-0.607846, -0.720000, 0.000000),
      vec3(-1.008661, -0.951411, 0.324071) } },
    { "PatellaR1", {
      0b0001100000000000,
      0b1110011111111111,
      vec3(-1.800623, -1.293180, 0.578682),
      vec3(-1.700623, -1.466385, 0.578682),
      vec3(-1.765661, -1.388465, 0.677163),
      vec3(-1.409475, -1.182821, 0.648141),
      vec3(-1.750623, -1.379782, 0.578682) } },
    { "TibiaR1", {
      0b0001100000000000,
      0b1110011111111111,
      vec3(-2.437325, -1.660781, 0.021827),
      vec3(-2.337326, -1.833986, 0.021827),
      vec3(-2.458266, -1.788341, 0.079185),
      vec3(-2.091770, -1.576744, 0.509223),
      vec3(-2.387326, -1.747383, 0.021827) } },
    { "TarsusR1", {
      0b0001100000000000,
      0b1110011111111111,
      vec3(-2.815065, -1.878868, -0.720687),
      vec3(-2.715065, -2.052073, -0.720687),
      vec3(-2.848716, -2.013767, -0.694806),
      vec3(-2.707004, -1.931949, -0.470480),
      vec3(-2.765065, -1.965471, -0.720687) } },
    { "TrochanterR2", {
      0b0001010000000000,
      0b1010101111111111,
      vec3(-0.535542, -0.122357, 0.000000),
      vec3(-0.500812, -0.319319, 0.000000),
      vec3(-0.518177, -0.220838, 0.100000),
      vec3(-0.400000, -0.200000, 0.000000),
      vec3(-0.518177, -0.220838, 0.000000) } },
    { "FemurR2", {
      0b0001010000000000,
      0b1010101111111111,
      vec3(-1.109508, -0.223563, 0.324071),
      vec3(-1.074779, -0.420524, 0.324071),
      vec3(-1.035657, -0.312083, 0.405986),
      vec3(-0.636354, -0.241676, 0.000000),
      vec3(-1.092143, -0.322044, 0.324071) } },
    { "PatellaR2", {
      0b0001010000000000,
      0b1110101111111111,
      vec3(-1.953236, -0.372335, 0.578682),
      vec3(-1.918507, -0.569296, 0.578682),
      vec3(-1.952972, -0.473831, 0.677163),
      vec3(-1.547933, -0.402412, 0.648141),
      vec3(-1.935871, -0.470816, 0.578682) } },
    { "TibiaR2", {
      0b0001010000000000,
      0b1110101111111111,
      vec3(-2.677268, -0.500001, 0.021827),
      vec3(-2.642538, -0.696963, 0.021827),
      vec3(-2.740574, -0.612706, 0.079185),
      vec3(-2.323810, -0.539220, 0.509223),
      vec3(-2.659903, -0.598482, 0.021827) } },
    { "TarsusR2", {
      0b0001010000000000,
      0b1110101111111111,
      vec3(-3.106817, -0.575742, -0.720687),
      vec3(-3.072088, -0.772704, -0.720687),
      vec3(-3.184577, -0.690996, -0.694806),
      vec3(-3.023428, -0.662581, -0.470480),
      vec3(-3.089452, -0.674223, -0.720687) } },
    { "TrochanterR3", {
      0b0001001000000000,
      0b1010110111111111,
      vec3(-0.490029, 0.327651, 0.000000),
      vec3(-0.541793, 0.134466, 0.000000),
      vec3(-0.515911, 0.231058, 0.100000),
      vec3(-0.400000, 0.200000, 0.000000),
      vec3(-0.515911, 0.231058, 0.000000) } },
    { "FemurR3", {
      0b0001001000000000,
      0b1010110111111111,
      vec3(-1.052991, 0.478496, 0.324071),
      vec3(-1.104755, 0.285311, 0.324071),
      vec3(-1.023470, 0.367058, 0.405986),
      vec3(-0.631822, 0.262117, 0.000000),
      vec3(-1.078873, 0.381903, 0.324071) } },
    { "PatellaR3", {
      0b0001001000000000,
      0b1110110111111111,
      vec3(-1.880542, 0.700238, 0.578682),
      vec3(-1.932306, 0.507052, 0.578682),
      vec3(-1.923197, 0.608139, 0.677163),
      vec3(-1.525923, 0.501690, 0.648141),
      vec3(-1.906424, 0.603645, 0.578682) } },
    { "TibiaR3", {
      0b0001001000000000,
      0b1110110111111111,
      vec3(-2.590692, 0.890522, 0.021827),
      vec3(-2.642456, 0.697337, 0.021827),
      vec3(-2.695698, 0.815130, 0.079185),
      vec3(-2.286924, 0.705600, 0.509223),
      vec3(-2.616574, 0.793929, 0.021827) } },
    { "TarsusR3", {
      0b0001001000000000,
      0b1110110111111111,
      vec3(-3.012005, 1.003412, -0.720687),
      vec3(-3.063769, 0.810227, -0.720687),
      vec3(-3.131188, 0.931820, -0.694806),
      vec3(-2.973128, 0.889468, -0.470480),
      vec3(-3.037887, 0.906820, -0.720687) } },
    { "TrochanterR4", {
      0b0001000100000000,
      0b1010111011111111,
      vec3(-0.427647, 0.753739, 0.000000),
      vec3(-0.556204, 0.600530, 0.000000),
      vec3(-0.491925, 0.677134, 0.100000),
      vec3(-0.400000, 0.600000, 0.000000),
      vec3(-0.491925, 0.677134, 0.000000) } },
    { "FemurR4", {
      0b0001000100000000,
      0b1010111011111111,
      vec3(-0.874113, 1.128369, 0.324071),
      vec3(-1.002671, 0.975160, 0.324071),
      vec3(-0.894454, 1.014896, 0.405986),
      vec3(-0.583851, 0.754269, 0.000000),
      vec3(-0.938392, 1.051765, 0.324071) } },
    { "PatellaR4", {
      0b0001000100000000,
      0b1110111011111111,
      vec3(-1.530417, 1.679073, 0.578682),
      vec3(-1.658975, 1.525864, 0.578682),
      vec3(-1.607998, 1.613631, 0.677163),
      vec3(-1.292933, 1.349260, 0.648141),
      vec3(-1.594696, 1.602469, 0.578682) } },
    { "TibiaR4", {
      0b0001000100000000,
      0b1110111011111111,
      vec3(-2.093614, 2.151651, 0.021827),
      vec3(-2.222172, 1.998443, 0.021827),
      vec3(-2.220643, 2.127701, 0.079185),
      vec3(-1.896459, 1.855678, 0.509223),
      vec3(-2.157893, 2.075047, 0.021827) } },
    { "TarsusR4", {
      0b0001000100000000,
      0b1110111011111111,
      vec3(-2.427744, 2.432019, -0.720687),
      vec3(-2.556302, 2.278811, -0.720687),
      vec3(-2.566017, 2.417504, -0.694806),
      vec3(-2.440665, 2.312321, -0.470480),
      vec3(-2.492023, 2.355415, -0.720687) } } };
